# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
version: 2

before:
  hooks:
    # this is just an example and not a requirement for provider building/publishing
    - go mod download

builds:
  - # Binary naming only required for Terraform CLI 0.12
    binary: "{{ .ProjectName }}_v{{ .Version }}_x5"
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    goos:
      - darwin
      - freebsd
      - linux
      - windows
    goarch:
      - "386"
      - amd64
      - arm
      - arm64
    ignore:
      - goarch: arm
        goos: windows
      - goarch: arm64
        goos: windows
      - goos: darwin
        goarch: "386"
    ldflags:
      - -s -w -X main.version={{ .Version }} -X main.commit={{ .Commit }}
    mod_timestamp: "{{ .CommitTimestamp }}"

archives:
  - files:
      # Ensure only built binary and license file are archived
      - src: LICENSE
        dst: LICENSE.txt
    formats: ["zip"]
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

checksum:
  algorithm: sha256
  extra_files:
    - glob: "terraform-registry-manifest.json"
      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"

signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

release:
  extra_files:
    - glob: "terraform-registry-manifest.json"
      name_template: "{{ .ProjectName }}_{{ .Version }}_manifest.json"
  # If you want to manually examine the release before its live, uncomment this line:
  # draft: true

changelog:
  disable: true

snapshot:
  version_template: "{{ .Tag }}-next"
